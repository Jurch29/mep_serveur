{"version":3,"sources":["component/history.js","component/navbar/navbar.jsx","component/accueil/accueil.jsx","App.jsx","index.js"],"names":["createBrowserHistory","Navigbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showModal","loggedIn","loading","error","initialTab","recoverPasswordSuccess","lblerror_login","lblerror_register","_this2","self","startLoading","email","document","querySelector","value","password","axios","method","url","headers","crossDomain","Content-Type","data","login","mdp","then","res","setState","console","log","onLoginSuccess","username","updateuser","id","catch","err","finishLoading","_this3","prenom","closeModal","_this4","response","_this5","isLoading","react_default","a","createElement","Fragment","Navbar","bg","variant","Brand","href","Nav","className","Link","to","Form","inline","Button","onClick","openModal","react_modal_login_default","visible","onCloseModal","bind","tabs","afterChange","afterTabsChange","loginLabel","registerLabel","loginError","label","registerError","form","onLogin","onRegister","onRecoverPassword","recoverPasswordSuccessLabel","recoverPasswordAnchor","loginBtn","registerBtn","recoverPasswordBtn","loginInputs","containerClass","type","inputClass","name","placeholder","registerInputs","recoverPasswordInputs","Component","accueil","context","App","Router","history","navbar_navbar","Switch","Route","exact","path","component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.6c099049.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { Component } from 'react';\nimport './navbar.css';\nimport {Nav, Navbar, Form, Button} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ReactModalLogin from \"react-modal-login\";\nimport axios from 'axios';\n\nclass Navigbar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      loggedIn: null,\n      loading: false,\n      error: null,\n      initialTab: null,\n      recoverPasswordSuccess: null,\n      lblerror_login: \"Fatal error\",\n      lblerror_register : \"Fatal error\"\n    };\n  }\n\n  onLogin() {\n    let self = this;\n    this.startLoading();\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n\n    if (!email || !password) {\n      this.setState({\n        error: true,\n        lblerror_login:\"Veuillez renseigner Email et mot de passe.\"\n      })\n    }\n    else{\n      axios({\n        method: 'post',\n        url: 'http://localhost:8080/mep_serveur/ServletAuth',\n        headers: {\n            'crossDomain': true,  //For cors errors \n            'Content-Type': 'text/plain'\n        },\n        data: {\n            login: email,\n            mdp: password\n        }\n        }).then(res => {\n            if (res.data === \"failed\"){\n              this.setState({\n                error: true,\n                lblerror_login:\"Identifiant ou mot de passe incorrecte.\"\n              })\n            }\n            else {\n              console.log(res.data);\n              this.onLoginSuccess(res.data.username);\n              this.props.updateuser(res.data.id); //déclenche la méthode updateuser dans le parent (app.js)\n            }\n        }).catch(function(err) {\n          self.setState({\n            error: true,\n            lblerror_login:\"Erreur réseau(\"+err+\")\"\n          })\n      });\n    }\n    this.finishLoading();\n  }\n\n  onRegister() {\n    let self = this;\n    const login = document.querySelector('#login').value;\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n\n    if (!login || !email || !password) {\n      this.setState({\n        error: true,\n        lblerror_register: \"Veuillez remplir tout les champs.\"\n      })\n    } else {\n\n      axios({\n        method: 'post',\n        url: 'http://localhost:4000/register',\n        headers: {\n            'crossDomain': true,  //For cors errors \n            'Content-Type': 'application/json'\n        },\n        data: {\n            login: email,\n            mdp: password,\n            prenom: login\n        }\n        }).then(res => {\n            if (res.data === \"failed\"){\n              this.setState({\n                error: true\n              })\n            }\n            else {\n              this.closeModal();\n            }  \n        }).catch(function(err) {\n          self.setState({\n            error: true,\n            lblerror_register:\"Erreur réseau(\"+err+\")\"\n          })\n      });\n    }\n  }\n\n  onRecoverPassword() {\n    const email = document.querySelector('#email').value;\n\n    if (!email) {\n      this.setState({\n        error: true,\n        recoverPasswordSuccess: false\n      })\n    } else {\n      this.setState({\n        error: null,\n        recoverPasswordSuccess: true\n      });\n    }\n  }\n\n  openModal(initialTab) {\n    this.setState({\n      initialTab: initialTab\n    }, () => {\n      this.setState({\n        showModal: true,\n      })\n    });\n  }\n\n  onLoginSuccess(method, response) {\n\n    this.closeModal();\n    this.setState({\n      loggedIn: method,\n      loading: false\n    })\n  }\n\n  onLoginFail(method, response) {\n\n    this.setState({\n      loading: false,\n      error: response\n    })\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    })\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    })\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null,\n      recoverPasswordSuccess: false,\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n  }\n\n  render() {\n\n    const loggedIn = this.state.loggedIn;\n    const isLoading = this.state.loading;\n\n    return (\n      \n     <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">DB.JAAP</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n\n          <li className=\"acceuil\"><Link to=\"/accueil\">Acceuil</Link></li>\n          <li><Link to=\"/apropos\">A propos</Link></li>\n\n        </Nav>\n\n        {loggedIn ? (\n          <div className=\"login\">\n            {loggedIn}\n          </div>\n        ) : (\n          <Form inline>\n            <Button onClick={() => this.openModal()} variant=\"outline-info\">Connexion</Button>\n          </Form>\n        )}\n\n      </Navbar>\n      <br />\n\n      <ReactModalLogin\n      visible={this.state.showModal}\n      onCloseModal={this.closeModal.bind(this)}\n      loading={isLoading}\n      initialTab={this.state.initialTab}\n      error={this.state.error}\n      tabs={{\n        afterChange: this.afterTabsChange.bind(this),\n        loginLabel : \"Connection\",\n        registerLabel : \"Inscription\"\n      }}\n      loginError={{\n        label : this.state.lblerror_login\n      }}\n      registerError={{\n        label: this.state.lblerror_register\n      }}\n      startLoading={this.startLoading.bind(this)}\n      finishLoading={this.finishLoading.bind(this)}\n      form={{\n        onLogin: this.onLogin.bind(this),\n        onRegister: this.onRegister.bind(this),\n        onRecoverPassword: this.onRecoverPassword.bind(this),\n\n        recoverPasswordSuccessLabel: this.state.recoverPasswordSuccess\n          ? {\n              label: \"Un message a été envoyé sur votre boîte mail.\"\n            }\n          : null,\n        recoverPasswordAnchor: {\n          label: \"Mot de passe oublié ?\"\n        },\n        loginBtn: {\n          label: \"Se connecter\"\n        },\n        registerBtn: {\n          label: \"S'inscrire\"\n        },\n        recoverPasswordBtn: {\n          label: \"Envoyer\"\n        },\n        loginInputs: [\n          {\n            containerClass: 'RML-form-group',\n            label: 'Email',\n            type: 'email',\n            inputClass: 'RML-form-control',\n            id: 'email',\n            name: 'email',\n            placeholder: 'Email',\n          },\n          {\n            containerClass: 'RML-form-group',\n            label: 'Mot de passe',\n            type: 'password',\n            inputClass: 'RML-form-control',\n            id: 'password',\n            name: 'password',\n            placeholder: 'Mot de passe',\n          }\n        ],\n        registerInputs: [\n          {\n            containerClass: 'RML-form-group',\n            label: 'Login',\n            type: 'text',\n            inputClass: 'RML-form-control',\n            id: 'login',\n            name: 'login',\n            placeholder: 'Login',\n          },\n          {\n            containerClass: 'RML-form-group',\n            label: 'Email',\n            type: 'email',\n            inputClass: 'RML-form-control',\n            id: 'email',\n            name: 'email',\n            placeholder: 'Email',\n          },\n          {\n            containerClass: 'RML-form-group',\n            label: 'Mot de passe',\n            type: 'password',\n            inputClass: 'RML-form-control',\n            id: 'password',\n            name: 'password',\n            placeholder: 'Mot de passe',\n          }\n        ],\n        recoverPasswordInputs: [\n          {\n            containerClass: 'RML-form-group',\n            label: 'Email',\n            type: 'email',\n            inputClass: 'RML-form-control',\n            id: 'email',\n            name: 'email',\n            placeholder: 'Email',\n          },\n        ],\n      }}\n    />\n    </>\n\n    );\n  }\n}\n\nexport default Navigbar;","import React, { Component } from 'react';\nimport './accueil.css';\n\nclass accueil extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n  }\n\n  render() {\n    return (\n      \n      <p>Accueil</p>\n\n    );\n  }\n}\n\nexport default accueil;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from \"./component/history\";\n\nimport Navigbar from \"./component/navbar/navbar\";\nimport accueil from \"./component/accueil/accueil\";\n\n\nclass App extends Component {\n\n    constructor(props){\n        super(props)\n\n        /*\n        //exemple d'axios sur servlet :\n        axios({\n        method: 'post',\n        url: 'http://localhost:8080/MEPDWP/ServletTest',\n        headers: {\n            'crossDomain': true,  //For cors errors \n            'Content-Type': 'application/json'\n        },\n        data: {\n            login: 5,\n            mdp: 2\n        }\n        });\n        */\n    }\n\n    render() {\n        return (\n            <Router history={history}>\n            <div>\n                <Navigbar/>\n                <Switch>\n                    <Route exact path=\"/\" component={accueil} />\n                    <Route path=\"/accueil\" component={accueil} />\n                </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}